/*
    7.12 A classificação por borbulhamento descrita no Exercício 7.11 é ineficiente
    para arrays grandes. Faça as seguintes modificações simples  para aprimorar
    desempenho da classificação por borbulhamento:
    a) Depois da primeira passagem, garante-se que o maior número está no elemento
    de número mais alto do array; após a segunda passagem,  os dois números mais
    altos estão ‘no lugar’; e assim por diante. Em vez de fazer nove comparações em
    cada passagem, modifique a  classificação por borbulhamento para fazer oito
    comparações na segunda passagem, sete na terceira passagem e assim por diante.
    b) Os dados no array já podem estar na ordem adequada ou ordem quase adequada,
    então por que fazer nove passagens se menos seriam  suficientes?
    Modifique a classificação para verificar no fim de cada passagem se alguma troca foi feita.
    Se nenhuma troca tiver sido  feita, então os dados já devem estar na ordem apropriada;
    portanto, o programa deve terminar. Se trocas foram feitas, então pelo menos  mais uma
    passagem é necessária.
    Deitel, Harvey; Paul, Harvey. C++ Como Programar (p. 303). Edição do Kindle.
    Autor: Pedri Filho 23/10/2021
*/

#include <iostream>
#include <locale>
#include

// função principal
int main()
{
    // localização geográfica
    setlocale( LC_ALL, "portuguese");

    // limpa a tela
    system("cls");

    system("pause"); // pausa do programa

    return 0; // programa terminado com sucesso

} // fim main
